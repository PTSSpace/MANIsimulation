<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find manisim)/mani_description/urdf/mani.urdf.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

<!-- <arg name="world_name" value="$(find manisim)/mani_gazebo/worlds/moon.world"/>-->

  <!-- Convert an xacro and put on parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.3 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <!-- ROS CONTROL starts here --> 
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find manisim)/mani_gazebo/config/mani.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/mani" args="joint_state_controller cam_neck_ort cam_head_ort steer_fl_ort steer_rl_ort steer_rr_ort steer_fr_ort drive_fl_vel drive_rl_vel drive_rr_vel drive_fr_vel"/>

<!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/mani/joint_states" />
  </node>
  <!-- ROS CONTROL ends here -->

</launch>
